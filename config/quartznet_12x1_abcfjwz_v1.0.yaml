name: &name "quartznet12x1_15012021 v1.0"

model:
  sample_rate: &sample_rate 16000
  repeat: &repeat 1
  dropout: &dropout 0.0
  separable: &separable true
  labels:  &labels [' ', 'a', 'b', 'c', 'd', 'e', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'x', 'y', 'à', 'á', 'â', 'ã', 'è', 'é', 'ê', 'ì', 'í', 'ò', 'ó', 'ô', 'õ', 'ù', 'ú', 'ý', 'ă', 'đ', 'ĩ', 'ũ', 'ơ', 'ư', 'ạ', 'ả', 'ấ', 'ầ', 'ẩ', 'ẫ', 'ậ', 'ắ', 'ằ', 'ẳ', 'ẵ', 'ặ', 'ẹ', 'ẻ', 'ẽ', 'ế', 'ề', 'ể', 'ễ', 'ệ', 'ỉ', 'ị', 'ọ', 'ỏ', 'ố', 'ồ', 'ổ', 'ỗ', 'ộ', 'ớ', 'ờ', 'ở', 'ỡ', 'ợ', 'ụ', 'ủ', 'ứ', 'ừ', 'ử', 'ữ', 'ự', 'ỳ', 'ỵ', 'ỷ', 'ỹ', 'f', 'j', 'w', 'z']

  preprocessor:
    _target_: nemo.collections.asr.modules.AudioToMelSpectrogramPreprocessor
    normalize: "per_feature"
    window_size: 0.02
    sample_rate: *sample_rate
    window_stride: 0.01
    window: "hann"
    features: &n_mels 64
    n_fft: 512
    frame_splicing: 1
    dither: 0.00001
    stft_conv: false

  spec_augment:
    _target_: nemo.collections.asr.modules.SpectrogramAugmentation
    rect_freq: 50
    rect_masks: 5
    rect_time: 120

  encoder:
    _target_: nemo.collections.asr.modules.ConvASREncoder
    feat_in: *n_mels
    activation: relu
    conv_mask: true

     jasper:
      - filters: 256
        repeat: 1
        kernel: [33]
        stride: [2]
        dilation: [1]
        dropout: 0.0
        residual: false
        separable: true

      - filters: 256
        repeat: 1
        kernel: [33]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 256
        repeat: 1
        kernel: [33]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 256
        repeat: 1
        kernel: [33]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 256
        repeat: 1
        kernel: [39]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 256
        repeat: 1
        kernel: [39]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 256
        repeat: 1
        kernel: [39]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 512
        repeat: 1
        kernel: [51]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 512
        repeat: 1
        kernel: [51]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 512
        repeat: 1
        kernel: [51]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 512
        repeat: 1
        kernel: [63]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 512
        repeat: 1
        kernel: [63]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 512
        repeat: 1
        kernel: [63]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 512
        repeat: 1
        kernel: [75]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: true
        separable: true

      - filters: 1024
        repeat: 1
        kernel: [1]
        stride: [1]
        dilation: [1]
        dropout: 0.0
        residual: false

  decoder:
    _target_: nemo.collections.asr.modules.ConvASRDecoder
    feat_in: 1024
    num_classes: 94
    vocabulary: *labels

  optim:
    name: novograd
    # _target_: nemo.core.optim.optimizers.Novograd
    lr: .01
    # optimizer arguments
    betas: [0.8, 0.5]
    weight_decay: 0.001

    # scheduler setup
    sched:
      name: CosineAnnealing

      # pytorch lightning args
      # monitor: val_loss
      # reduce_on_plateau: false

      # Scheduler params
      warmup_steps: null
      warmup_ratio: null
      min_lr: 0.0
      last_epoch: -1

trainer:
  gpus: 1 # number of gpus
  max_epochs: 200
  max_steps: null # computed at runtime if not set
  num_nodes: 1
  accelerator: ddp
  accumulate_grad_batches: 1
  checkpoint_callback: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager
  log_every_n_steps: 1  # Interval of logging.
  val_check_interval: 1.0  # Set to 0.25 to check 4 times per epoch, or an int for number of iterations

exp_manager:
  exp_dir: null
  name: *name
  create_tensorboard_logger: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: "val_wer"
    mode: "min"
  create_wandb_logger: False
  wandb_logger_kwargs:
    name: null
    project: null

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null
